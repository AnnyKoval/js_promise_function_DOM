{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","newDiv","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EAChBD,qBAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADnC,UAMN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAASC,SAASC,cAAc,OAEtCF,EAAOG,UAAUC,IAAI,WACrBJ,EAAOK,YAAcN,EAErBE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.e312820d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element: ${\n        element.nodeName}, id: ${element.id}.`);\n    });\n  });\n};\n\nconst printMessage = (message) => {\n  const newDiv = document.createElement('div');\n\n  newDiv.classList.add('message');\n  newDiv.textContent = message;\n\n  document.body.append(newDiv);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}